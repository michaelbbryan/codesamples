/*
 *
 * Task code generated by SAS Studio 3.4 
 *
 * Generated on '8/24/15, 12:12 PM' 
 * Generated by 'sasdemo' 
 * Generated on server 'LOCALHOST' 
 * Generated on SAS platform 'Linux LIN X64 2.6.32-504.23.4.el6.x86_64' 
 * Generated on SAS version '9.04.01M3P06242015' 
 * Generated on browser 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.0' 
 * Generated on web client 'http://192.168.88.128/SASStudio/34/main?locale=en_US&zone=GMT-04%253A00' 
 *
 */

ods noproctitle;
ods graphics / imagemap=on;

%macro scatterPlotMatrix(data=, numVars=, xVars=, groupVar=);
	%local title;

	/* scatterplot matrix */

	%if(&numVars >=2) %then
		%do;

			/* Scatterplot matrix is used to explore relationships among numerical variables */
	
			%if(&groupVar ne %str()) %then
				%let title=%str(Scatterplot matrix of )&data.%str( data) grouped by &groupVar.;
			%else
				%let title=%str(Scatterplot matrix of )&data.%str( data);

			proc sgscatter data=&data;
				matrix &xVars / 
 		%if(&groupVar ne %str()) %then
					%do;
						group=&groupVar legend=(sortorder=ascending)
 		%end;
				;
				title &title;
			run;

			title;
		%end;
%mend scatterPlotMatrix;

/* Histogram (one-way or two-way) */
%macro DEHisto(data=, avar=, classVar=);
	%local i numAVars numCVars cVar cVar1 cVar2;
	%let numAVars=%Sysfunc(countw(%str(&avar), %str( )));
	%let numCVars=%Sysfunc(countw(%str(&classVar), %str( )));

	%if(&numAVars>0 & &numCVars>0) %then
		%do;

			%if(&numCVars=1) %then
				%do;

					/* one calss variable */
		%let cVar=%scan(%str(&classVar), 1, %str( ));

					proc sql noprint;
						select count(distinct &cVar) into :nrows from &data;
					quit;

					/* one-way histogram */
					proc univariate data=&data noprint;
						var &avar;
						class &cVar;
						histogram &avar / nrows=&nrows;
						inset mean std n / position=ne;
					run;

				%end;
			%else
				%do;

					/* two class variables */
					/* one-way histogram of each class variable */
		
					%do i=1 %to %eval(&numCVars);
						%let cVar=%scan(%str(&classVar), &i, %str( ));

						proc sql noprint;
							select count(distinct &cVar) into :nrows from &data;
						quit;

						proc univariate data=&data noprint;
							var &avar;
							class &cVar;
							histogram &avar / nrows=&nrows;
							inset mean std n / position=ne;
						run;

					%end;

					/* two-way histogram */
		%let cVar1=%scan(%str(&classVar), 1, %str( ));
					%let cVar2=%scan(%str(&classVar), 2, %str( ));

					proc sql noprint;
						select count(distinct &cVar1) into :nrows from &data;
					quit;

					proc sql noprint;
						select count(distinct &cVar2) into :ncols from &data;
					quit;

					proc univariate data=&data noprint;
						var &avar;
						class &cVar1 &cVar2;
						histogram &avar / nrows=&nrows ncols=&ncols;
						inset mean std n / position=ne;
					run;

				%end;
		%end;
%mend DEHisto;

%scatterPlotMatrix(data=SASHELP.CARS, numVars=3, xVars=Invoice MPG_Highway 
	Weight, groupVar=Type);
%DEHisto(data=SASHELP.CARS, avar=Invoice MPG_Highway Weight, classVar=Type);